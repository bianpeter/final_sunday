{"version":3,"sources":["components/ButtonM.jsx","components/MenuH.jsx","components/Loader.jsx","components/Post.jsx","components/Homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyButton","styled","Button","background","border","borderRadius","boxShadow","color","height","padding","letterSpacing","ButtonM","props","onClick","click","disabled","dis","text","useStyles","makeStyles","iconB","backgroundColor","position","top","right","margin","icon","fontSize","options","MenuH","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","className","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","MenuItem","selected","uuidv4","Loader","Post","res","show","setShow","title","author","description","Homepage","hagyma","setHagyma","load","setLoad","email","setEmail","isShow","SetIsShow","setRes","useEffect","fetch","then","response","json","catch","error","finally","type","placeholder","onChange","e","target","value","includes","method","headers","body","JSON","stringify","err","setTimeout","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c501e9c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst MyButton = styled(Button)({\r\n  background: 'linear-gradient(45deg, #FC766AFF 30%, #5B84B1FF 90%)',\r\n  border: \"none\",\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  color: 'white',\r\n  height: 48,\r\n  padding: '0 30px',\r\n  letterSpacing:\"5px\"\r\n});\r\n\r\n\r\nfunction ButtonM(props) {\r\n  \r\n  return (\r\n    <div>\r\n      <MyButton onClick={props.click} disabled={props.dis}>{props.text}</MyButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonM","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  iconB: {\r\n    backgroundColor:\"rgb(241, 241, 241)\",\r\n    position:\"absolute\",\r\n    top:\"0\",\r\n    right:\"0\",\r\n    margin:\"20px\",\r\n    \"&:hover\": {\r\n      backgroundColor:\"grey\",\r\n      color:\"white\"\r\n    },\r\n    \"&:media (max-width: 1100px)\": {\r\n\r\n    }\r\n  },\r\n  icon: {\r\n    fontSize:\"45px\",\r\n    \"@media (max-width: 1024px)\": {\r\n      fontSize:\"35px\",\r\n    },\r\n    \"@media (max-width: 768px)\": {\r\n      fontSize:\"30px\",\r\n    },\r\n  }\r\n\r\n});\r\n\r\n\r\nconst options = [\r\n  'Home',\r\n  'About',\r\n  'Contact',\r\n  'Cats',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nfunction MenuH() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton className={classes.iconB}\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuRoundedIcon className={classes.icon} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={uuidv4()} selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MenuH\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div>\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useState} from 'react'\r\nimport ButtonM from \"./ButtonM\";\r\n\r\nfunction Post({res}) {\r\n  const [show, setShow] = useState(false);\r\n \r\n  return (\r\n    <div className=\"post\">\r\n      <h3>{res.title}</h3>\r\n      <p>Author: {res.author}</p>\r\n      \r\n\r\n      { show \r\n          ? <p>{res.description}</p>\r\n          : <ButtonM click={ () => setShow(true)} text=\"Show More\" />\r\n      }   \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React,{ useState, useEffect} from 'react'\r\nimport  \"../style/style.scss\"\r\nimport ButtonM from \"./ButtonM\";\r\nimport MenuH from \"./MenuH\";\r\nimport Loader from './Loader';\r\nimport Post from './Post';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//alternativ megoldás:  hagyma.map((res, index) => <Post key={res.title + index} res={res}/>)\r\n\r\nfunction Homepage() {\r\n\r\n  const [hagyma, setHagyma] = useState([]);\r\n  const [load, setLoad] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isShow, SetIsShow] = useState(true);\r\n  const [res, setRes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoad(false)\r\n\r\n    //adatok behívása\r\n    fetch(\"./data/data.json\")\r\n      .then(response => response.json())\r\n      .then(hagyma => setHagyma (hagyma))\r\n      .catch(error => setHagyma(null))\r\n      .finally(() => setLoad(true))\r\n  }, [])\r\n\r\n\r\n  //post request\r\n  function submit () {\r\n    fetch(\"./data/data.json\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ email: email})  //küldésnél JSON.parse\r\n    }).then(response => setRes(true))\r\n      .catch(err => setRes(false))\r\n      .finally(() => setTimeout(SetIsShow(false), 5000))\r\n\r\n      console.log(email)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <MenuH/>\r\n      <h1>Title</h1>\r\n      \r\n      {\r\n        !load \r\n          ? <Loader/> \r\n          : hagyma\r\n            ? hagyma.map(res => <Post key={uuidv4()} res={res}/>)\r\n            : <div>Cant show data</div>\r\n      }\r\n      {\r\n        load && isShow &&\r\n          <form>\r\n            <label>Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Email\" \r\n              onChange={e => setEmail(e.target.value)}>\r\n            </input>\r\n            <ButtonM \r\n              text=\"Subscribe\" \r\n              dis={!(email.includes(\"@\" && \".\"))} \r\n              click={() => submit()}  \r\n            />\r\n          </form>\r\n         \r\n      }\r\n\r\n      {/*<form>\r\n        <label>Email:</label>\r\n        <input type=\"email\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}></input>\r\n        <ButtonM text=\"Subscribe\" dis={!(email.includes(\"@\" && \".\"))} click={() => submit()}  />\r\n      </form>\r\n      */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import Homepage from \"./components/Homepage\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}